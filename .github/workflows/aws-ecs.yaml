name: AWS ECS Next.js

on:
  workflow_dispatch:
  push:

env:
  AWS_REGION: us-east-1
  AWS_ACCOUNT_ID: 224732705809
  AWS_REPO_NAME: nextjs-application
  AWS_CLUSTER_NAME: nextjs-application-cluster
  AWS_SERVICE_NAME: nextjs-application-service
  AWS_SUBNET_ID: subnet-0c2498747a4bc442d
  AWS_SECURITY_GROUP_ID: sg-09e8ee3206242b2a5

jobs:
  aws-ecs-fargate-nextjs:
    runs-on: ubuntu-latest
    steps:
      - name: AWS AuthN
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION}}
      - name: Checkout Code
        uses: actions/checkout@v4
      - name: Setup Docker buildx
        uses: docker/setup-buildx-action@v2
      - name: Docker Login To AWS ECR
        uses: docker/login-action@v3
        with:
          registry: ${{ env.AWS_ACCOUNT_ID }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com
          username: ${{ secrets.AWS_ACCESS_KEY_ID }}
          password: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      - name: Create AWS EC Repo
        run: |
          aws ecr describe-repositories --repository-name ${{ env.AWS_REPO_NAME }} || \
          aws ecr create-repository --repository-name ${{ env.AWS_REPO_NAME }}
      - name: Docker Build & Push
        uses: docker/build-push-action@v5
        with:
          context: next-app/
          push: true
          tags: ${{ env.AWS_ACCOUNT_ID }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com/${{ env.AWS_REPO_NAME }}:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max
      - name: Create AWS ECS Cluster
        continue-on-error: true
        run: |
          aws ecs create-cluster --cluster-name ${{ env.AWS_CLUSTER_NAME }} --region ${{ env.AWS_REGION }}
      - name: Register Task Definition
        run: |
          aws ecs register-task-definition --cli-input-json file://task-definition.json
      - name: Create Service
        continue-on-error: true
        run: |
          aws ecs create-service \
             --cluster ${{ env.AWS_CLUSTER_NAME }} \
             --service-name ${{ env.AWS_SERVICE_NAME }} \
             --task-definition nextjs-application-task \
             --desired-count 1 \
             --launch-type FARGATE \
             --network-configuration "awsvpcConfiguration={subnets=[${{ env.AWS_SUBNET_ID }}],securityGroups=[${{ env.AWS_SECURITY_GROUP_ID }}],assignPublicIp=ENABLED}" \
             --region ${{ env.AWS_REGION }}
